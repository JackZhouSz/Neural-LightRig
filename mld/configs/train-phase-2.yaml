model:
  target: mld.model.MVDiffusion
  params:
    tuning_strategy: full
    enable_concats: true
    n_val_batches: 1
    drop_cond_prob: 0.1
    sd_21_pretrain: "stabilityai/stable-diffusion-2-1"
    train_cfg:
      learning_rate: 5e-6
      warmup_steps: 2000
      max_steps: 80000


data:
  target: mld.dataset.DataModuleFromConfig
  params:
    max_steps: ${model.params.train_cfg.max_steps}
    batch_size: 4  # 128 bs in total (4 nodes of 8 x A100 80G)
    num_workers: 16
    train:
      target: mld.dataset.MultiLightDiffusionDataset
      params:
        data_root: <DATA_ROOT_CONTAINING_OBJECT_RENDERINGS>  # TODO: replace
        meta_file: <META_FILE_WITH_TRAIN_EVAL_SPLITS>  # TODO: replace
        meta_split: train
        blend_input_bg: 1.0
        aug_prob: 0.5
        aug_intense_level_in: 0.1
    validation:
      target: mld.dataset.MultiLightDiffusionDataset
      params:
        data_root: <DATA_ROOT_CONTAINING_OBJECT_RENDERINGS>  # TODO: replace
        meta_file: <META_FILE_WITH_TRAIN_EVAL_SPLITS>  # TODO: replace, should also reduce eval size to save time
        meta_split: eval
        blend_input_bg: 1.0


lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 2000
      save_top_k: -1
      save_last: true
  callbacks: {}

  trainer:
    load_from: <PATH_TO_TRAINED_PHASE_I_MODEL>
    benchmark: true
    max_steps: ${model.params.train_cfg.max_steps}
    gradient_clip_val: 1.0
    val_check_interval: 2000
    num_sanity_val_steps: 0
    accumulate_grad_batches: 1
    check_val_every_n_epoch: null
